local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))() 
local window = DrRayLibrary:Load("Rinns Hub", "Default") 
local tab = DrRayLibrary.newTab("Main Tab", "ImageIdHere") 

local autoGetDrops = false 
local pingEveryone = false 
local itemsToFind = { "Wealth Cube", "Speed Cube", "Pastel Cube", "Spore Blossom", "Technosphere", "Luck Cube", "Haste Cube", "Golden Cube", "Glitch Cube", "Fortune Cube", "Event Horizon" } 

local storedWebhookUrl = nil
local antiAfkConnection

tab.newToggle("Auto Get All Drops", "Auto Farms All the Drops for you", true, function(toggleState) 
    autoGetDrops = toggleState 
    if autoGetDrops then 
        print("Auto Get All Drops is now ON") 
        autoFarm() 
    else 
        print("Auto Get All Drops is now OFF") 
    end 
end) 

tab.newToggle("Ping Everyone", "Ping everyone in Discord notifications", false, function(toggleState)
    pingEveryone = toggleState
    if pingEveryone then
        print("Ping Everyone is now ON")
    else
        print("Ping Everyone is now OFF")
    end
end)

tab.newInput("Input", "Prints your input.", function(text) 
    if string.match(text, "^https://discord.com/api/webhooks/%d+/[%w-_]+$") then
        storedWebhookUrl = text
        print("Stored webhook URL: " .. text)
    else
        print("Entered text: " .. text)
    end
end)

tab.newButton("Anti Afk", "Prevents you from being able to get kicked", function()
    print("Anti-AFK Activated")
    if antiAfkConnection then
        antiAfkConnection:Disconnect()
    end
    antiAfkConnection = game:GetService("Players").LocalPlayer.Idled:Connect(function()
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        print("Prevented AFK kick")
    end)
end)

function teleportTo(part) 
    local player = game.Players.LocalPlayer 
    local character = player.Character or player.CharacterAdded:Wait() 
    if character.PrimaryPart then 
        character:SetPrimaryPartCFrame(part.CFrame) 
        warn("Teleported to", part.Parent.Name) 
    else 
        warn("Character primary part not found") 
    end 
end 

function autoFarm() 
    while autoGetDrops do 
        for _, itemName in ipairs(itemsToFind) do 
            for _, item in pairs(workspace:GetChildren()) do 
                if item:IsA("Model") and item.Name == itemName then 
                    local hitbox = item:FindFirstChild("Hitbox") 
                    if hitbox then 
                        print("Teleporting to", itemName) 
                        teleportTo(hitbox) 
                        wait(1) 
                        if storedWebhookUrl then
                            sendWebhookMessage(itemName)
                        end
                    else 
                        warn(itemName, "found but Hitbox not found") 
                    end 
                end 
            end 
        end 
        wait(0.1) -- Small delay to prevent excessive looping 
    end 
end

function sendWebhookMessage(cubeName)
    local HttpService = game:GetService("HttpService")
    local messageContent = (pingEveryone and "@everyone " or "") .. "Collected " .. cubeName .. "\nhttps://discord.com/invite/QP8ZqdFZye"
    local msg = {
        ["content"] = messageContent,
    }

    request = http_request or request or HttpPost or syn.request
    request({
        Url = storedWebhookUrl,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
        },
        Body = HttpService:JSONEncode(msg),
    })
end

-- Variables for teleportation feature
local toggleOn = false
local teleportInterval = 180 -- 3 minutes in seconds
local timeElapsed = 0
local player = game.Players.LocalPlayer
local part = game.Workspace:WaitForChild("ObbyEnd")

-- Function to teleport player
local function teleportPlayer()
    player.Character:MoveTo(part.Position + Vector3.new(0, 5, 0)) -- Teleports 5 studs above the part
end

-- Function to handle teleportation loop
local function teleportLoop()
    while toggleOn do
        wait(teleportInterval - timeElapsed)
        if toggleOn then
            teleportPlayer()
            timeElapsed = 0
        end
    end
end

-- Toggle for teleportation feature
tab.newToggle("Auto Do Luck Boost Obby", "Auto Does The Luck Boost Obby For You", false, function(toggleState)
    toggleOn = toggleState

    if toggleOn then
        print("Imagine")
        teleportPlayer()  -- Teleport immediately upon toggling on
        teleportLoop()
    else
        print("Imagine Turning This Off")
        -- Store the time elapsed if toggled off
        timeElapsed = os.time() % teleportInterval
    end
end)

local upgradestab = DrRayLibrary.newTab("Upgrades tab", "ImageIdHere")

local autoUpgradeTycoon = false
local autoUpgradeLuck = false
local autoUpgradeLuckBurst = false
local autoUpgradeWalkspeed = false
local bringAllCubes = false

upgradestab.newToggle("Auto Upgrade tycoon", "Auto Upgrades Your tycoon for you", true, function(toggleState)
    autoUpgradeTycoon = toggleState
    if autoUpgradeTycoon then
        print("Auto Upgrade Tycoon On")
        while autoUpgradeTycoon do
            local args = {
                [1] = "Upgrade",
                [2] = "Base"
            }
            game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
            wait(0.6)
        end
    else
        print("Auto Upgrade Tycoon Off")
    end
end)

upgradestab.newToggle("Auto Upgrade Luck", "Auto Upgrades Your Luck for you", true, function(toggleState)
    autoUpgradeLuck = toggleState
    if autoUpgradeLuck then
        print("Auto Upgrade Luck On")
        while autoUpgradeLuck do
            local args = {
                [1] = "Upgrade",
                [2] = "Luck"
            }
            game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
            wait(0.6)
        end
    else
        print("Auto Upgrade Luck Off")
    end
end)

upgradestab.newToggle("Auto Upgrade Luck Burst", "Auto Upgrades Your Burst Luck for you", true, function(toggleState)
    autoUpgradeLuckBurst = toggleState
    if autoUpgradeLuckBurst then
        print("Auto Upgrade Luck Burst On")
        while autoUpgradeLuckBurst do
            local args = {
                [1] = "Upgrade",
                [2] = "Burst"
            }
            game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
            wait(0.6)
        end
    else
        print("Auto Upgrade Luck Burst Off")
    end
end)

upgradestab.newToggle("Auto Upgrade Walkspeed", "Auto Upgrades Your Walkspeed for you", true, function(toggleState)
    autoUpgradeWalkspeed = toggleState
    if autoUpgradeWalkspeed then
        print("Auto Upgrade Walkspeed On")
        while autoUpgradeWalkspeed do
            local args = {
                [1] = "Upgrade",
                [2] = "Walkspeed"
            }
            game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
            wait(0.6)
        end
    else
        print("Auto Upgrade Walkspeed Off")
    end
end)

tab.newToggle("Bring All Cubes", "Brings all cubes to the player", true, function(toggleState)
    bringAllCubes = toggleState
    if bringAllCubes then
        print("Bring All Cubes On")
        local cubeNames = {
            "Wealth Cube", "Speed Cube", "Pastel Cube", "Spore Blossom", 
            "Technosphere", "Luck Cube", "Haste Cube", "Golden Cube", 
            "Glitch Cube", "Fortune Cube", "Event Horizon"
        }
        
        while bringAllCubes do
            for _, cubeName in pairs(cubeNames) do
                for _, cube in pairs(game.Workspace:GetChildren()) do
                    if cube:IsA("Model") and cube.Name == cubeName then
                        local hitbox = cube:FindFirstChild("Hitbox")
                        if hitbox then
                            -- Tween the Hitbox to the player's position
                            local tweenService = game:GetService("TweenService")
                            local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                            local tweenInfo = TweenInfo.new(1) -- Adjust the time for the tween as needed
                            local goal = {Position = playerPosition}
                            
                            local tween = tweenService:Create(hitbox, tweenInfo, goal)
                            tween:Play()
                        end
                    end
                end
            end
            wait(0.1) -- Add a slight delay to prevent overwhelming the server
        end
    else
        print("Bring All Cubes Off")
    end
end)


